plugins{
  id 'java-library'
  id 'application'
}

group 'cloud.kopi.turnip'
version '1.0-SNAPSHOT'

repositories{
  mavenCentral()
}

java{
  toolchain{
    languageVersion = JavaLanguageVersion.of(16)
  }
}

tasks.withType(JavaCompile) {
  // show details of deprecated usage
  options.compilerArgs += "-Xlint:deprecation"
  // show details of unchecked or unsafe operations
  options.compilerArgs += "-Xlint:unchecked"
  // warn about dodgy finalizers
  options.compilerArgs += "-Xlint:finally"

  // UTF-8 everywhere - yes, even (especially!) when compiling 
  // your IDE should be set to UTF-8, too
  options.encoding = "UTF-8"

}
tasks.withType(Test) {
//  jvmArgs += ""
}
tasks.withType(JavaExec) {
//  jvmArgs += ""
//  environment << ["":""]
}

dependencies{
  implementation 'org.springframework:spring-webmvc:5.3.4'

  // embedded Jetty server
  implementation 'org.eclipse.jetty:jetty-server:10.0.1'
  implementation 'org.eclipse.jetty:jetty-servlet:10.0.1'

  // use SLf4J API to log against
  implementation 'org.slf4j:slf4j-api:1.8.0-beta4'

  // turnip stuff and jetty both use logback
  runtimeOnly 'ch.qos.logback:logback-core:1.3.0-alpha5'
  runtimeOnly 'ch.qos.logback:logback-classic:1.3.0-alpha5'

  // except for bootstrap, we use servlet API rather than Jetty classes 
  compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
  
  // JSON stuff
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.2'

//  implementation 'com.auth0:auth0-spring-security-api:1.4.1'
  
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

application{
  mainClass = 'turnip.App'
}

applicationDefaultJvmArgs = [
  // UTC everywhere, always
  '-Duser.timezone=UTC',
  // UTF-8 everywhere, always
  "-Dfile.encoding=UTF-8",
  // for consistency, rather than any specific reason 
  "-Duser.language=", "-Duser.country=", "-Duser.variant=",
]

test{
  useJUnitPlatform()
}

task uberJar(type: Jar) {
  group "distribution"
  archiveClassifier = 'uber'

  // different name from standard jar and don't want version in the name
  archiveFileName = "turnip-app.jar"
  
  manifest{
    mainClassName = "turnip.App"
    duplicatesStrategy "EXCLUDE"
    attributes (
      'Main-Class': 'turnip.App',
      "Implementation-Title": "Turnip",
      "Implementation-Version": archiveVersion,
    )
  }
  
  dependsOn configurations.runtimeClasspath
  from sourceSets.main.output
  from {
    configurations.runtimeClasspath.findAll { 
      it.name.endsWith('jar') }.collect { zipTree(it) 
    }
  }
  
  doFirst{
    println "generating ubrJar to ${archiveFile.get()}"
  }
}